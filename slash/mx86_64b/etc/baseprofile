[ -e "/bin/busybox.exe" ] && _box="/bin/busybox.exe" || _box="/bin/toybox.exe"

_fpac() {
  toinst=""
  MyProg="$1"
  MyProg="${MyProg/\.exe/}"
  MyProg="${MyProg##*/}"
  MyProg="${MyProg//+/\\+}"
  if [ -e "/etc/setup/cmdlist" ]; then
    toinst="`$_box grep -E "^${MyProg}: " /etc/setup/cmdlist | $_box head -1`"
    toinst="${toinst%%:*}"
    if [ "$toinst" = "" ]; then
      toinst="`$_box grep -E " ${MyProg} | ${MyProg}\$" /etc/setup/cmdlist | (while read i; do builtin echo -n " ${i%%:*}"; done)`"
      toinst="${toinst:1:3600}"
    fi
  fi
  if [ "$toinst" = "" ] && [ "$2" = "" ]; then toinst="$1"; fi
  builtin echo "$toinst"
}

_tob() {
  if [ -e "/bin/$1.exe" ]; then
    _p="/bin/$1.exe"
    shift
    if [ "$_p" = "/bin/grep.exe" ]; then
      "$_p" --colour "$@"
    else
      "$_p" "$@"
    fi
  elif [ -e "/bin/$1" ]; then
    _p="/bin/$1"
    shift
    "$_p" "$@"
  else
    if [ -e "/bin/busybox.exe" ]; then
      tbcmd="\n`/bin/busybox.exe --list`\n"
      if [ "${tbcmd#*
$1
*}" != "${tbcmd}" ]; then
        /bin/busybox.exe "$@"
        return
      fi
    fi
    if [ -e "/bin/toybox.exe" ]; then
      tbcmd="\n`/bin/toybox.exe`\n"
      if [ "${tbcmd#*
$1
*}" != "${tbcmd}" ]; then
        /bin/toybox.exe "$@"
        return
      fi
    fi
    for _fold in Windows Windows/System32 Windows/SysWow64; do
      if [ -e "/drives/c/$_fold/$1.exe" ]; then
        _p="/drives/c/$_fold/$1.exe"
        shift
        /bin/conin.exe "$_p" "$@"
        return
      fi
    done
    command_not_found_handler "$1"
  fi
}

function open {
  if [ -e "/bin/cygstart.exe" ]; then
    /bin/cygstart.exe "$@"
  elif [ "${1##*http://}" == "$1" ] && [ "${1##*https://}" == "$1" ] && [ "${1##*mailto:}" == "$1" ]; then
    /bin/MobaBox.exe open "`/bin/toybox.exe convpath -w "$1"`"
  else
    /bin/MobaBox.exe open "$1"
  fi
}

export VAGRANT_DETECTED_OS="cygwin"
[ -e "/bin/less.exe" ] && export GIT_PAGER="/bin/less.exe -R" || export GIT_PAGER="$_box less -R"

alias cls='builtin echo -e "\ec\e[3J"'
alias clearall='builtin echo -e "\ec\e[3J"'

for i in MobApt MobaCompareFiles MobaCompareFolders MobaControlPanel MobaHwInfo MobaKillTask MobaListPorts MobaPictureViewer MobaSwInfo MobaTextEditor MobaVerifySSHAlgos OpenX Rainbowizer ServersListToMxtSessions.sh TurboVNC XWin ascii ascii-xfr autossh balance bc beep cfourcc conin connect crond ctris curl cygcheck cygpath cygstart editrights egrep env extract_compressed_fs fdupes fortune ftp fvwm fvwm-root fvwmquit getAvailableDisplay getfacl git git-receive-pack git-upload-archive git-upload-pack glxgears glxinfo greed grep help httping iconv iperf iperf3 iperfd iperfd3 jwm kill killX kinit klist kpasswd ldd logo lrz lscolors lsfont lsz makeself.sh man mathomatic minicom mkgroup mkpasswd mkshortcut; do alias "$i"="_tob $i"; done
for i in mobawget mosh-client moshsession mount nc ncdu nimesweeper ninvaders passwd paste png2ico portmap protocol ps rcp regtool rlogin rpc rsh rsync rsyncd runscript rxvt scp scrdaemons setfacl setx11dpi setxkbmap sftp showkey showmount shutdown socat soliterm ssh ssh-add ssh-agent ssh-agent-original ssh-copy-id ssh-keygen ssh-keyscan ssh-pageant ssh-pkcs11-helper sshd sshpass stgames strace sudoku telnet telnetd termwalk top toybox tput umount vim vnp waitforX wget whois xauth xdpyinfo xev xhost xkbevd xkill xlsatoms xlsclients xlsfonts xmodmap xpmroot xprop xrdb xterm xwinwm zstd-decompress; do alias "$i"="_tob $i"; done
for i in bash zsh make cmake gcc compress count factor free host link nc netcat nl shred truncate uptime; do alias "$i"="_tob $i"; done
for i in ar awk base64 basename bunzip2 bzcat bzip2 cal cat chat chgrp chmod chown chpasswd chpst chroot chrt cksum clear cmp comm cp cpio crond crontab cryptpw cut date dc dd devmem df diff dirname dnsd dnsdomainname dos2unix du ed egrep env envdir envuidgid expand expr fakeidentd fgrep find fold fsync ftpget ftpput fuser gawk getopt grep groups gunzip gzip hd head hexdump hostname httpd id inetd install iostat ipcalc killall killall5 less ln logger logname logread lpd lpq lpr lsof lzcat lzma lzop lzopcat makemime md5sum mesg mkdir mkfifo mknod mktemp more mpstat mt mv nc nice nmeter nohup nslookup od patch; do alias "$i"="_tob $i"; done
for i in pgrep pidof pipe_progress pkill popmaildir printenv pscan pstree pwdx readlink realpath reformime renice reset resize rev rm rmdir rpm rpm2cpio run-parts runsv runsvdir script scriptreplay sed sendmail seq setsid setuidgid sha1sum sha256sum sha3sum sha512sum sleep smemcap softlimit sort split start-stop-daemon stat strings stty sum sv svlogd sync sysctl syslogd tac tail tar tcpsvd tee telnet telnetd test tftp tftpd time timeout touch tr tty ttysize udpsvd uname uncompress unexpand uniq unix2dos unlzma unlzop unxz unzip usleep uudecode uuencode vlock volname watch wc wget which whoami whois xargs xz xzcat yes zcat; do alias "$i"="_tob $i"; done
for i in hexedit who base32 crc32 file pwgen shuf unicode uuidgen; do alias "$i"="_tob $i"; done
[ -e "/bin/gawk.exe" ] && alias "awk"="/bin/gawk.exe"

alias echo="builtin echo"
alias false="builtin false"
alias true="builtin true"
alias printf="builtin printf"
alias pwd="builtin pwd"
alias ulimit="builtin ulimit"
alias umask="builtin umask"

alias ls="_tob ls --color=auto"
alias dir="_tob ls --color=auto"
alias ll="_tob ls -l --color=auto"
alias la="_tob ls -al --color=auto"
alias l="_tob ls -al --color=auto"

for i in newtab Newtab NewTab newTab MobaNewTab new tab; do alias "$i"="/bin/MobaBox.exe MobaSendMsg MobaXterm -newtab"; done
for i in Accessibility AdminTools Audio AudioVolume Certificates CheckDisks CheckSystemFiles Clean Colors Computer DCom Defrag Devices DirectX Disks Display DriversList Events Firewall Folders Fonts International Internet Keyboard Mouse Network NewDevice Odbc Performances Policies Printers Programs Registry Restore Scheduler Security Services Shares Signature Startup System SystemFiles Tasks Telephony Time Updates Users UsersAdvanced WindowsVersion; do alias MobaControl$i="/bin/MobaControlPanel MobaControl$i"; done
for i in MobaProcessInfo mobaprocessinfo htop MobaTaskList mobatasklist top; do alias $i="/bin/top"; alias ${i}-nocolor="/bin/top -nocolor"; done
alias ps2="/bin/top -once"
alias ps2-nocolor="/bin/top -once -nocolor"
for i in MobaWakeOnLan WakeOnLan mobawakeonlan wakeonlan; do alias $i="/bin/MobaBox.exe MobaSendMsg MobaXterm wakeonlan"; done
for i in MobaListOpenPorts Mobalistopenports mobalistopenports ListOpenPorts listopenports PortsInfo NetworkPortsList; do alias $i="/bin/MobaListPorts"; done
for i in MobaPictureViewer Mobapictureviewer mobapictureviewer ShowImage showimage DisplayImage OpenImage openimage ViewImage viewimage PictureView pictureview PhotoView ImageView imageview Show Display PicView picview; do alias $i="/bin/MobaPictureViewer"; done
for i in MobaTextEditor Mobatexteditor mobatexteditor TextEdit textedit Edit edit OpenText opentext; do alias $i="/bin/MobaTextEditor"; done
for i in DiffFiles difffiles MobaDiffFiles mobadifffiles CompareFiles FilesDiff filesdiff FilesCompare TextDiff Textdiff textdiff MobaTextDiff Mobatextdiff mobatextdiff MobaDiff mobadiff; do alias $i="/bin/MobaCompareFiles"; done
for i in DiffFolders difffolders MobaDiffFolders Mobadifffolders mobadifffolders MobaFoldersDiff mobafoldersdiff CompareFolders comparefolders FoldersDiff foldersdiff FoldersCompare DirectoriesCompare; do alias $i="/bin/MobaCompareFolders"; done
for i in MobApt Mobapt mobapt; do alias "$i"="/bin/MobApt"; done
for i in apt apt-get apt-cyg apt-moba yum urpmi rpm dpkg pacman ipkg; do alias $i="_tob ls --color=none /etc/setup/mobainstalled.db /etc/setup/cmdlist >/dev/null 2>/dev/null; /bin/MobaBox.exe apt-get"; done
for i in apt-plugin createplugin; do alias $i="_tob ls --color=none /etc/setup/mobainstalled.db /etc/setup/cmdlist >/dev/null 2>/dev/null; /bin/MobaBox.exe apt plugin"; done
for i in EnumDLLs enumdlls Enumdlls EnumDlls MobaKillTask mobakilltask mobakill MobaKill MobaTCPCapture mobatcpcapture TCPCapture tcpcapture MobaSendMsg mobasendmsg MobaWmiRequest mobawmirequest WMIRequest wmirequest ifconfig; do alias $i="/bin/MobaBox.exe $i"; done
for i in Open Run run Launch launch cygstart; do alias $i="open"; done
for i in ps kill ldd; do [ -e "/bin/$i.exe" ] && alias "$i"="/bin/$i.exe" || alias "$i"="/bin/MobaBox.exe $i"; done
[ -e "/bin/ps.exe" ] && alias ps="/bin/ps.exe -W"
[ -e "/bin/kill.exe" ] && alias kill="/bin/kill.exe -f"
[ -e "/bin/cygpath.exe" ] && alias cygpath="/bin/cygpath.exe" || alias cygpath="/bin/toybox.exe convpath"

alias balance="_tob balance -M"
alias connect-proxy="_tob connect"
alias proxy-connect="_tob connect"
alias sudo="_tob cygstart --action=runas"
alias rz="_tob lrz --zmodem"
alias sz="_tob lsz --zmodem"
alias rx="_tob lrz --xmodem"
alias sx="_tob lsz --xmodem"
alias rb="_tob lrz --ymodem"
alias sb="_tob lsz --ymodem"
alias minicom="_tob minicom -m -c on"
alias xminicom="_tob minicom -m -c on"
alias MobaHwInfo="/bin/MobaHwInfo"
alias MobaSwInfo="/bin/MobaSwInfo"
alias mobahwinfo="/bin/MobaHwInfo"
alias mobaswinfo="/bin/MobaSwInfo"
alias grep="_tob grep --colour"
alias grep.exe="_tob grep --colour"
alias egrep="_tob grep --colour -E"
alias fgrep="_tob grep --colour -F"
alias rgrep="_tob grep --colour -r"
alias setx11dpi="/bin/setx11dpi"
alias x11setdpi="/bin/setx11dpi"
alias xsetdpi="/bin/setx11dpi"
alias setxkbmap='_tob setxkbmap -I "`cygpath -w "/usr/share/X11/xkb/"`"'
alias vi="_tob vim"
alias winpty="/bin/conin.exe"
alias winpty.exe="/bin/conin.exe"
alias cmd="/bin/conin.exe cmd"
alias cmd.exe="/bin/conin.exe cmd"
alias reboot="_tob shutdown -f -r now"
alias halt="_tob shutdown -f -s now"
alias about="open https://mobaxterm.mobatek.net/download.html"
alias telnetd="/etc/init.d/telnetd"
alias ftpd="/etc/init.d/ftpd"
alias mintty="export PROMPT_TYPE=rxvt; [ -e /bin/mintty.exe ] && /bin/mintty.exe bash -l -i || rxvt"
alias xterm="export PROMPT_TYPE=rxvt; [ -e /bin/xterm.exe ] && /bin/xterm.exe -e bash -l -i || rxvt"
alias rxvt="PROMPT_TYPE=rxvt rxvt"
alias ssh="/bin/ssh.exe"
alias "ssh-nocompression"="/bin/ssh.exe -o Compression=no"
alias "ssh-noencryption"="/bin/ssh.exe -o UseRsh=yes"
alias scp="/bin/scp.exe -S /bin/_ssh.exe"
alias sftp="/bin/sftp.exe -S /bin/_ssh.exe"
alias iperf2="/bin/iperf.exe"


if [ "$SHELL" = "/bin/zsh.exe" ]; then
  alias sh="/bin/zsh.exe"
  alias stat="builtin stat"
else
  alias sh="/bin/bash.exe"
fi


function echo2 {
  builtin echo -e "\e#3$@\n\e#4$@"
}

function cat2 {
  if [ "$1" = "" ]; then
    while read i; do echo2 "$i"; done
  else
    cat "$1" | (while read i; do echo2 "$i"; done)
  fi
}

function microcom {
  [ "$1" = "-s" ] && COMPORT=" on \033[36m$3\033[0m" || COMPORT="\033[0m"
  echo -e "\033[31mLaunching microcom serial connection$COMPORT.\n\033[31mPress Ctrl+X to exit.\033[0m"
  _tob microcom "$@"
}

function ssh-keygen {
  [ -e "/home/mobaxterm/README.txt" ] && _tob cat "/home/mobaxterm/README.txt"
  /bin/ssh-keygen.exe "$@"
}

function vless {
  /bin/vim.exe -R -u /etc/vimrc.less -c 'set nomod nolist' "$@"
}

function less-syntax {
  /bin/vim.exe -R -u /etc/vimrc.less -c 'set nomod nolist' "$@"
}

function view {
  /bin/vim.exe -R -u /etc/vimrc.less -c 'set nomod nolist' "$@"
}

function services-status {
  for i in `_tob ls /etc/init.d/`; do /etc/init.d/$i status; done
}

function zless {
  _tob gunzip -c "$@" | _tob less
}

function zmore {
  _tob gunzip -c "$@" | _tob more
}

function bzless {
  _tob bunzip2 -c "$@" | _tob less
}

function bzmore {
  _tob bunzip2 -c "$@" | _tob more
}

function xzless {
  _tob xzcat "$@" | _tob less
}

function xzmore {
  _tob xzcat "$@" | _tob more
}

function telnet {
  echo -ne "\0033]2;$@\a"
  _tob telnet "$@"
}

function rsh {
  echo -ne "\0033]2;$@\a"
  /bin/rsh.exe "$@"
}

function rlogin {
  echo -ne "\0033]2;$1\a"
  /bin/rlogin.exe "$@"
}

function mcedit {
  /bin/mc.exe --edit=$@
}

function service {
  if [ -z "$1" ]; then
    services-status
  else
    /etc/init.d/"$@"
  fi
}

function ToolDisabled {
  echo -e "\e[31mSorry: $1 has been disabled by your System Administrator.\e[0m"
  echo
}
function ToolNotIncluded {
  if _tob ls "/bin/$1" >/dev/null 2>/dev/null || _tob ls "/bin/$1.exe" >/dev/null 2>/dev/null; then
    progname="$1"
    unalias "$progname" 2>/dev/null
    shift
    if [ "$1" = "-si" ] && [ -n "$2" ]; then
      shift
      shift
    fi
    "$progname" "$@"
  else
    command_not_found_handler "$1" "NoReturn"
    if [ "$?" != "0" ]; then
      if [ "$2" == "-si" ] && [ -n "$3" ]; then
        builtin echo
        builtin echo -e "Starting \033[32m$3\033[0m instead..."
        if [ "$3" == "TCPCapture" ]; then
          /bin/MobaBox.exe mobasendmsg MobaXterm tcpcapture
        else
          NewProg="$3"
          shift
          shift
          shift
          $NewProg "$@"
        fi
      fi
    fi
  fi
}

function _search_in_winpath(){
  if builtin echo "$WINPATH" | _tob grep -q -i "$1"; then
    builtin echo "$WINPATH" | _tob sed -e "s/;/\n/g" -e "s|\\\\|/|g" | (while read i; do if [ -e "$i/$2" ] || [ -e "$i/$2.exe" ]; then [ -e "$i/cygwin1.dll" ] || echo "$i/$2"; fi; done) | _tob head -1
  fi
}

function _exec_cyg_or_win_binary() {
  MyWinBin="`_tob which $1`"
  if [ "$MyWinBin" = "" ]; then
    MyWinBin="`_search_in_winpath "$2" "$1"`"
  fi 
  if [ "$MyWinBin" = "" ]; then
    ToolNotIncluded "$1"
  else
    shift
    shift
    MyWinBinTrunked1="${MyWinBin#*/}"
    MyWinBinTrunked2="${MyWinBin#*/*/}"
    if [ "${MyWinBin%%/*}" = "C:" ] || [ "${MyWinBin%%/*}" = "c:" ] || [ "${MyWinBinTrunked1%%/*}" = "drives" ] || [ "${MyWinBinTrunked2%%/*}" = "c" ]; then
      /bin/conin.exe "$MyWinBin" "$@"
    else
      "$MyWinBin" "$@"
    fi
  fi
}

alias powershell="_exec_cyg_or_win_binary powershell powershell"
alias pwsh="_exec_cyg_or_win_binary pwsh pwsh"
alias javac="_exec_cyg_or_win_binary javac java"
alias java="_exec_cyg_or_win_binary java java"
alias python="_exec_cyg_or_win_binary python python"
alias python3="_exec_cyg_or_win_binary python3 python3"
alias mysql="_exec_cyg_or_win_binary mysql sql"
alias psql="_exec_cyg_or_win_binary psql sql"
alias kubectl="_exec_cyg_or_win_binary kubectl kubectl"
alias tsh="_exec_cyg_or_win_binary tsh tsh"

function docker() {
  MyDocker="`which docker`"
  if [ "$MyDocker" != "" ]; then
    MyDocker="docker.exe"
  else
    if [ -e "`cat /proc/registry*/HKEY_LOCAL_MACHINE/SOFTWARE/Docker*/*/*/BinPath`/docker.exe" ]; then
      MyDocker="`cat /proc/registry*/HKEY_LOCAL_MACHINE/SOFTWARE/Docker*/*/*/BinPath`/docker.exe"
    elif [ -e "`cat /proc/registry*/HKEY_LOCAL_MACHINE/SOFTWARE/Docker*/*/*/AppPath`/docker.exe" ]; then
      MyDocker="`cat /proc/registry*/HKEY_LOCAL_MACHINE/SOFTWARE/Docker*/*/*/AppPath`/docker.exe"
    elif [ -e "`cat /proc/registry*/HKEY_LOCAL_MACHINE/SOFTWARE/Docker*/*/*/AppPath`/resources/bin/docker.exe" ]; then
      MyDocker="`cat /proc/registry*/HKEY_LOCAL_MACHINE/SOFTWARE/Docker*/*/*/AppPath`/resources/bin/docker.exe"
    else
      MyDocker="`_search_in_winpath docker docker.exe`"
    fi
  fi 
  if [ "$MyDocker" = "" ]; then
    builtin echo "Sorry, docker does not seem to be installed"
  else
    if [ "$1" = "run" ]; then
      shift
      /bin/conin.exe "$MyDocker" run -e DISPLAY=$EXPORTED_DISPLAY "$@"
    elif [ "$1" = "images" ] || [ "$1" = "ps" ]; then
      "$MyDocker" "$@"
    else
      /bin/conin.exe "$MyDocker" "$@"
    fi
  fi
}

alias nedit="ToolNotIncluded nedit -si MobaTextEditor"
alias gvim="ToolNotIncluded gvim -si MobaTextEditor"
alias emacs="ToolNotIncluded emacs -si MobaTextEditor"
alias emacs-w32="ToolNotIncluded emacs-w32 -si MobaTextEditor"
alias xemacs="ToolNotIncluded xemacs -si MobaTextEditor"
alias kate="ToolNotIncluded kate -si MobaTextEditor"
alias kwrite="ToolNotIncluded kwrite -si MobaTextEditor"
alias gedit="ToolNotIncluded gedit -si MobaTextEditor"
alias kdiff="ToolNotIncluded kdiff -si MobaCompareFiles"
alias gphoto="ToolNotIncluded gphoto -si MobaPictureViewer"
alias kuickshow="ToolNotIncluded kuickshow -si MobaPictureViewer"
alias showimg="ToolNotIncluded showimg -si MobaPictureViewer"
alias tcpdump="ToolNotIncluded tcpdump -si TCPCapture"
alias wireshark="ToolNotIncluded wireshark -si TCPCapture"
alias ethereal="ToolNotIncluded ethereal -si TCPCapture"
alias xcalc="ToolNotIncluded xcalc -si calc"
alias gcalc="ToolNotIncluded gcalc -si calc"
alias kcalc="ToolNotIncluded kcalc -si calc"


alias path='builtin echo $PATH'
alias cgrep='grep --color=always'
alias lsd='_tob ls -d */'
alias lll='ls -la | less'
alias md='mkdir'
alias ..='cd ..'
alias ...='cd ../..'
alias path='echo -e ${PATH//:/\\n}'
alias removeemptylines="sed -i -e '/^$/d'"
alias tree="find . | sed 's/[^/]*\//|   /g;s/| *\([^| ]\)/+--- \1/'"
alias clr="clear; pwd; ls -lrth"
alias title="xtitle"
alias settitle="xtitle"
alias settabtitle="xtitle"
alias tabtitle="xtitle"
function cl { cd $* && ls; }
function xtitle { builtin echo -en  "\e]0;$*\a"; }
function extract() {
  if [ -z "$1" ]; then
    echo "Usage: extract <archive_to_extract>"
  elif [ -f $1 ]; then
    case $1 in
      *.tar.bz2)   tar -xvjf $1;;
      *.tar.gz)    tar -xvzf $1;;
      *.tar.xz)    tar -xvJf $1;;
      *.bz2)       bunzip2 $1;;
      *.gz)        gunzip $1;;
      *.xz)        unxz $1;;
      *.lzma)      unlzma $1;;
      *.tar)       tar -xvf $1;;
      *.tbz2)      tar -xvjf $1;;
      *.tgz)       tar -xvzf $1;;
      *.txz)       tar -xvJf $1;;
      *.zip)       unzip $1;;
      *.Z)         uncompress $1;;
      *)           echo "'$1' cannot be extracted via >extract<";;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

command_not_found_handler() {
  [ "$2" != "NoEcho" ] && builtin echo "$1: command not found"
  MyProg="$1"
  MyProg="${MyProg/\.exe/}"
  MyProg="${MyProg##*/}"
  MyProg="${MyProg//+/\\+}"
  AptPack="`_fpac "$MyProg" "N"`"
  if [ "$AptPack" != "" ]; then
    builtin echo -e "\n\e[1;34m\xEE\x83\xB8 $1\e[0m can be installed using the following command: \e[1;35mapt install $AptPack\e[0m\n"
    [ "$2" != "NoReturn" ] && return 0
  else
    [ "$2" != "NoReturn" ] && return 1
  fi
}

function command_not_found_handle() {
  >&2 builtin echo "$1: command not found"
  if shopt -q login_shell 2>/dev/null >/dev/null; then
    if [ -t 1 ] && [ -t 2 ]; then
      command_not_found_handler "$1" "NoEcho"
    fi
  fi
}
_tob chgrp 545 "/home/mobaxterm/.ssh/id_*" >/dev/null 2>/dev/null
_tob chmod 600 "/home/mobaxterm/.ssh/id_*" >/dev/null 2>/dev/null
if [ ! -e "/etc/ssh_agent_env.sh" ]; then
  _tob ls -al /bin/cygcrypto-1.0.0.dll >/dev/null 2>/dev/null
  _tob ls -al /bin/cygcrypto-1.1.dll >/dev/null 2>/dev/null
  _tob ls -al /bin/cygcrypto-3.dll >/dev/null 2>/dev/null
  /bin/ssh-agent.exe > /etc/ssh_agent_env.sh 2>/dev/null
  if [ "$?" != "0" ]; then
    if [ -L "/bin/ssh-agent.exe" ]; then
      _tob mv /bin/cygcrypto-1.1.dll /bin/cygcrypto-1.1.dll.BAK 2>/dev/null
      /bin/ssh-agent.exe > /etc/ssh_agent_env.sh 2>/dev/null
      _tob mv /bin/cygcrypto-1.1.dll.BAK /bin/cygcrypto-1.1.dll 2>/dev/null
      if [ "$?" != "0" ]; then
        _tob mv /bin/cygcrypto-1.1.dll /bin/cygcrypto-1.1.dll.BAK 2>/dev/null
        /bin/ssh-agent.exe > /etc/ssh_agent_env.sh 2>/dev/null
        _tob mv /bin/cygcrypto-1.1.dll.BAK /bin/cygcrypto-1.1.dll 2>/dev/null
      fi
    fi
  fi
  [ -e "/etc/ssh_agent_env.sh" ] && _tob chmod 777 /etc/ssh_agent_env.sh
  [ -e "/etc/ssh_agent_env.sh" ] && . /etc/ssh_agent_env.sh >/dev/null 2>&1
else
  . /etc/ssh_agent_env.sh >/dev/null 2>&1
fi
